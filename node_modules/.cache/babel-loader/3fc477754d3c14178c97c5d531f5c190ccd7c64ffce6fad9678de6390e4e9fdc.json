{"ast":null,"code":"var _jsxFileName = \"/Users/tejashwa/Desktop/gag-genius/src/Components/Body.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport MemeCard from \"./MemeCard/MemeCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [memes, setMemes] = useState([]);\n  useEffect(() => {\n    const fetchMemes = async () => {\n      try {\n        const response = await fetch('https://api.imgflip.com/get_memes');\n        if (!response.ok) {\n          throw new Error('Failed to fetch memes');\n        }\n        const data = await response.json();\n        setMemes(data.data.memes);\n      } catch (error) {\n        console.error('Error fetching memes:', error);\n      }\n    };\n    fetchMemes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pick Your Meme Template\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memes-container\",\n      children: memes.map(meme => /*#__PURE__*/_jsxDEV(MemeCard, {\n        meme: meme\n      }, meme.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"5gdHCcF3c1u3tVEy6qXr88dpXdk=\");\n_c = Body;\nexport default Body;\n\n// const Body = () => {\n//     const [memes, setMemes] = useState([]);\n\n//     useEffect(() => {\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["useEffect","useState","MemeCard","jsxDEV","_jsxDEV","Body","_s","memes","setMemes","fetchMemes","response","fetch","ok","Error","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","meme","id","_c","$RefreshReg$"],"sources":["/Users/tejashwa/Desktop/gag-genius/src/Components/Body.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport MemeCard from \"./MemeCard/MemeCard\";\n\nconst Body = () => {\n  const [memes, setMemes] = useState([]);\n\n  useEffect(() => {\n    const fetchMemes = async () => {\n      try {\n        const response = await fetch('https://api.imgflip.com/get_memes');\n        if (!response.ok) {\n          throw new Error('Failed to fetch memes');\n        }\n        const data = await response.json();\n        setMemes(data.data.memes);\n      } catch (error) {\n        console.error('Error fetching memes:', error);\n      }\n    };\n\n    fetchMemes();\n  }, []);\n\n  return (\n    <div className=\"body\">\n      <h1>Pick Your Meme Template</h1>\n      <div className=\"memes-container\">\n        {memes.map((meme) => (\n          <MemeCard key={meme.id} meme={meme} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Body;\n\n// const Body = () => {\n//     const [memes, setMemes] = useState([]);\n  \n//     useEffect(() => {\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QACjE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCP,QAAQ,CAACM,IAAI,CAACA,IAAI,CAACP,KAAK,CAAC;MAC3B,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDP,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKc,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBf,OAAA;MAAAe,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCnB,OAAA;MAAKc,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7BZ,KAAK,CAACiB,GAAG,CAAEC,IAAI,iBACdrB,OAAA,CAACF,QAAQ;QAAeuB,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CA9BID,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAgCV,eAAeA,IAAI;;AAEnB;AACA;;AAEA;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}